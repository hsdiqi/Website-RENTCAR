CREATE TABLE  "KARYAWAN" 
   (	"ID_KARYAWAN" VARCHAR2(20) NOT NULL ENABLE, 
	"NAMA_LENGKAP" VARCHAR2(50) NOT NULL ENABLE, 
	"ALAMAT" VARCHAR2(50) NOT NULL ENABLE, 
	"NOMOR_TELEPON" NUMBER(*,0) NOT NULL ENABLE, 
	"GAJI" NUMBER(*,0) NOT NULL ENABLE, 
	"JABATAN" VARCHAR2(50) NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(100), 
	"PASSWORD" VARCHAR2(255), 
	"STATUS" VARCHAR2(25), 
	 CONSTRAINT "KARYAWAN_PK" PRIMARY KEY ("ID_KARYAWAN") ENABLE
   ) ;CREATE TABLE  "KATALOG_KENDARAAN" 
   (	"ID_KATEGORI" VARCHAR2(20) NOT NULL ENABLE, 
	"NAMA_KATEGORI" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	"TIPE_KATEGORI" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "KATALOG_KENDARAAN_PK" PRIMARY KEY ("ID_KATEGORI") ENABLE
   ) ;CREATE TABLE  "KENDARAAN" 
   (	"ID_KENDARAAN" VARCHAR2(20) NOT NULL ENABLE, 
	"NAMA_KENDARAAN" VARCHAR2(100) NOT NULL ENABLE, 
	"NOPOL" VARCHAR2(100) NOT NULL ENABLE, 
	"TIPE_KENDARAAN" VARCHAR2(100) NOT NULL ENABLE, 
	"HARGA" NUMBER(*,0) NOT NULL ENABLE, 
	"STATUS" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	"KATALOG_KENDARAAN_ID_KATEGORI" VARCHAR2(20) NOT NULL ENABLE, 
	"FOTO_KENDARAAN" VARCHAR2(255), 
	"BANYAK_SEWA" NUMBER(*,0), 
	"TOP_SPEED" NUMBER(*,0), 
	"LAST_SERVICE" DATE, 
	"CAP_PENUMPANG" NUMBER(*,0), 
	"WARNA" VARCHAR2(50), 
	"TAHUN_BELI" NUMBER(4,0), 
	 CONSTRAINT "KENDARAAN_PK" PRIMARY KEY ("ID_KENDARAAN") ENABLE
   ) ;CREATE TABLE  "MEMBERSHIP" 
   (	"ID_MEMBERSHIP" NUMBER(*,0) NOT NULL ENABLE, 
	"JENIS_MEMBERSHIP" VARCHAR2(10) NOT NULL ENABLE, 
	 CONSTRAINT "MEMBERSHIP_PK" PRIMARY KEY ("ID_MEMBERSHIP") ENABLE
   ) ;CREATE TABLE  "PELANGGAN" 
   (	"ID_PELANGGAN" VARCHAR2(20) NOT NULL ENABLE, 
	"NAMA_DEPAN" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	"NAMA_BELAKANG" VARCHAR2(255 CHAR), 
	"ALAMAT" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	"NOMOR_TELEPON" NUMBER(*,0) NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(150 CHAR) NOT NULL ENABLE, 
	"FOTO_PELANGGAN" VARCHAR2(255), 
	"MEMBER_ID_PELANGGAN" NUMBER(*,0), 
	"NIK" NUMBER(*,0), 
	"PASSWORD" VARCHAR2(255), 
	"POINT_MEMBERSHIP" NUMBER, 
	"STATUS" VARCHAR2(25), 
	 CONSTRAINT "PELANGGAN_PK" PRIMARY KEY ("ID_PELANGGAN") ENABLE
   ) ;CREATE TABLE  "PEMESANAN" 
   (	"ID_PEMESANAN" VARCHAR2(20) NOT NULL ENABLE, 
	"TANGGAL_PEMESANAN" DATE NOT NULL ENABLE, 
	"TANGGAL_MULAI_SEWA" DATE NOT NULL ENABLE, 
	"TANGGAL_AKHIR_SEWA" DATE NOT NULL ENABLE, 
	"TOTAL" NUMBER(*,0) NOT NULL ENABLE, 
	"STATUS_PEMESANAN" VARCHAR2(50 CHAR) NOT NULL ENABLE, 
	"PELANGGAN_ID_PELANGGAN" VARCHAR2(20) NOT NULL ENABLE, 
	"KENDARAAN_ID_KENDARAAN" VARCHAR2(20) NOT NULL ENABLE, 
	 CONSTRAINT "PEMESANAN_PK" PRIMARY KEY ("ID_PEMESANAN") ENABLE
   ) ;CREATE TABLE  "PEMBAYARAN" 
   (	"ID_PEMBAYARAN" VARCHAR2(20) NOT NULL ENABLE, 
	"METODE_PEMBAYARAN" VARCHAR2(50 CHAR), 
	"TANGGAL_PEMBAYARAN" DATE, 
	"JUMLAH_PEMBAYARAN" NUMBER(*,0), 
	"PEMESANAN_ID_PEMESANAN" VARCHAR2(20) NOT NULL ENABLE, 
	"STATUS_PEMBAYARAN" VARCHAR2(50), 
	"ID_KARYAWAN" VARCHAR2(20), 
	 CONSTRAINT "PEMBAYARAN_PK" PRIMARY KEY ("ID_PEMBAYARAN") ENABLE
   ) ;ALTER TABLE  "KENDARAAN" ADD CONSTRAINT "KENDARAAN_KATALOG_KENDARAAN_FK" FOREIGN KEY ("KATALOG_KENDARAAN_ID_KATEGORI")
	  REFERENCES  "KATALOG_KENDARAAN" ("ID_KATEGORI") ENABLE;ALTER TABLE  "PEMBAYARAN" ADD CONSTRAINT "PEMBAYARAN_PEMESANAN_FK" FOREIGN KEY ("PEMESANAN_ID_PEMESANAN")
	  REFERENCES  "PEMESANAN" ("ID_PEMESANAN") ENABLE;ALTER TABLE  "PEMESANAN" ADD CONSTRAINT "PEMESANAN_KENDARAAN_FK" FOREIGN KEY ("KENDARAAN_ID_KENDARAAN")
	  REFERENCES  "KENDARAAN" ("ID_KENDARAAN") ENABLE;ALTER TABLE  "PEMESANAN" ADD CONSTRAINT "PEMESANAN_PELANGGAN_FK" FOREIGN KEY ("PELANGGAN_ID_PELANGGAN")
	  REFERENCES  "PELANGGAN" ("ID_PELANGGAN") DISABLE;
Rem No function found to generate DDL.
CREATE UNIQUE INDEX  "KARYAWAN_PK" ON  "KARYAWAN" ("ID_KARYAWAN") 
  ;CREATE UNIQUE INDEX  "KATALOG_KENDARAAN_PK" ON  "KATALOG_KENDARAAN" ("ID_KATEGORI") 
  ;CREATE UNIQUE INDEX  "KENDARAAN_PK" ON  "KENDARAAN" ("ID_KENDARAAN") 
  ;CREATE UNIQUE INDEX  "MEMBERSHIP_PK" ON  "MEMBERSHIP" ("ID_MEMBERSHIP") 
  ;CREATE UNIQUE INDEX  "PELANGGAN_PK" ON  "PELANGGAN" ("ID_PELANGGAN") 
  ;CREATE UNIQUE INDEX  "PEMBAYARAN_PK" ON  "PEMBAYARAN" ("ID_PEMBAYARAN") 
  ;CREATE UNIQUE INDEX  "PEMBAYARAN__IDX" ON  "PEMBAYARAN" ("PEMESANAN_ID_PEMESANAN") 
  ;CREATE UNIQUE INDEX  "PEMESANAN_PK" ON  "PEMESANAN" ("ID_PEMESANAN") 
  ;
Rem No package found to generate DDL.
Rem No procedure found to generate DDL.
 CREATE SEQUENCE   "PELANGGAN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ; CREATE SEQUENCE   "PAYMENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ; CREATE SEQUENCE   "MOBIL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ; CREATE SEQUENCE   "KARYAWAN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ; CREATE SEQUENCE   "BOOKING_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
Rem No synonym found to generate DDL.
CREATE OR REPLACE TRIGGER  "UPDATE_ORDER_TOTAL" 
after insert or update or delete on demo_order_items
begin

-- Update the Order Total when any order item is changed

update demo_orders set order_total =
  (select sum(unit_price*quantity) from demo_order_items
    where demo_order_items.order_id = demo_orders.order_id);
end;
/
ALTER TRIGGER  "UPDATE_ORDER_TOTAL" ENABLE;CREATE OR REPLACE TRIGGER  "BEFORE_INSERT_PEMESANAN" 
BEFORE INSERT ON pemesanan
FOR EACH ROW
BEGIN
    :NEW.id_pemesanan := 'PSN' || TO_CHAR(SYSDATE, 'YY') || 
                         UPPER(SUBSTR(TO_CHAR(SYSDATE, 'MON'), 1, 3)) || 
                         LPAD(booking_seq.NEXTVAL, 4, '0');
END;

/
ALTER TRIGGER  "BEFORE_INSERT_PEMESANAN" ENABLE;CREATE OR REPLACE TRIGGER  "BEFORE_INSERT_PEMBAYARAN" 
BEFORE INSERT ON pembayaran
FOR EACH ROW
BEGIN
    :NEW.id_pembayaran := 'BYR' || LPAD(payment_seq.NEXTVAL, 4, '0');
END;

/
ALTER TRIGGER  "BEFORE_INSERT_PEMBAYARAN" ENABLE;CREATE OR REPLACE TRIGGER  "BEFORE_INSERT_PELANGGAN" 
BEFORE INSERT ON pelanggan
FOR EACH ROW
BEGIN
    :NEW.id_pelanggan := 'USR' || TO_CHAR(SYSDATE, 'YY') || 
                         UPPER(SUBSTR(TO_CHAR(SYSDATE, 'MON'), 1, 3)) || 
                         LPAD(pelanggan_seq.NEXTVAL, 4, '0');
END;

/
ALTER TRIGGER  "BEFORE_INSERT_PELANGGAN" ENABLE;CREATE OR REPLACE TRIGGER  "BEFORE_INSERT_KENDARAAN" 
BEFORE INSERT ON kendaraan
FOR EACH ROW
DECLARE
    v_id_kategori VARCHAR2(3);
BEGIN
    -- Fetch the id_kategori based on kategori
    SELECT id_kategori INTO v_id_kategori
    FROM katalog_kendaraan
    WHERE tipe_kategori = :NEW.tipe_kendaraan;
    -- Generate the id_kendaraan with the fetched id_kategori and sequence value
    :NEW.id_kendaraan := v_id_kategori || LPAD(mobil_seq.NEXTVAL, 4, '0');
END;

/
ALTER TRIGGER  "BEFORE_INSERT_KENDARAAN" ENABLE;CREATE OR REPLACE TRIGGER  "BEFORE_INSERT_KARYAWAN" 
BEFORE INSERT ON karyawan
FOR EACH ROW
BEGIN
    IF :NEW.jabatan = 'Owner' THEN
        :NEW.id_karyawan := 'ONR' || LPAD(karyawan_seq.NEXTVAL, 3, '0');
    ELSIF :NEW.jabatan = 'Supervisor' THEN
        :NEW.id_karyawan := 'HR' || LPAD(karyawan_seq.NEXTVAL, 3, '0');
    ELSIF :NEW.jabatan = 'Staff' THEN
        :NEW.id_karyawan := 'STF' || LPAD(karyawan_seq.NEXTVAL, 3, '0');
    ELSIF :NEW.jabatan = 'Manager' THEN
        :NEW.id_karyawan := 'MNG' || LPAD(karyawan_seq.NEXTVAL, 3, '0');
    ELSE
        :NEW.id_karyawan := 'UNK' || LPAD(karyawan_seq.NEXTVAL, 3, '0'); -- For unknown positions
    END IF;
END;

/
ALTER TRIGGER  "BEFORE_INSERT_KARYAWAN" ENABLE;
CREATE OR REPLACE FORCE VIEW  "V_DETAIL_PESANAN" ("ID_PEMESANAN", "TANGGAL_PEMESANAN", "START_DATE", "END_DATE", "TOTAL_BAYAR", "STATUS_PEMESANAN", "NAMA_PELANGGAN", "ALAMAT_PELANGGAN", "TELEPON_PELANGGAN", "EMAIL_PELANGGAN", "NAMA_KENDARAAN", "NOPOL", "TIPE_KENDARAAN", "HARGA", "METODE_PEMBAYARAN", "TANGGAL_PEMBAYARAN", "id_pembayaran", "id_pelanggan") AS 
  SELECT
    P.ID_PEMESANAN,
    P.TANGGAL_PEMESANAN,
    P.TANGGAL_MULAI_SEWA AS START_DATE,
    P.TANGGAL_AKHIR_SEWA AS END_DATE,
    P.TOTAL AS TOTAL_BAYAR,
    P.STATUS_PEMESANAN,
    PL.NAMA_DEPAN || ' ' || PL.NAMA_BELAKANG AS NAMA_PELANGGAN,
    PL.ALAMAT AS ALAMAT_PELANGGAN,
    PL.NOMOR_TELEPON AS TELEPON_PELANGGAN,
    PL.EMAIL AS EMAIL_PELANGGAN,
    K.NAMA_KENDARAAN,
    K.NOPOL,
    K.TIPE_KENDARAAN,
    K.HARGA,
    PB.METODE_PEMBAYARAN,
    PB.TANGGAL_PEMBAYARAN,
    PB.ID_PEMBAYARAN,
    PL.ID_PELANGGAN
                                                                                                                   
FROM
    RENTCAR.PEMESANAN P
JOIN
    RENTCAR.PELANGGAN PL ON P.PELANGGAN_ID_PELANGGAN = PL.ID_PELANGGAN
JOIN
    RENTCAR.KENDARAAN K ON P.KENDARAAN_ID_KENDARAAN = K.ID_KENDARAAN
LEFT JOIN
    RENTCAR.PEMBAYARAN PB ON P.ID_PEMESANAN = PB.PEMESANAN_ID_PEMESANAN
;CREATE OR REPLACE FORCE VIEW  "V_KENDARAAN_MOSTBOOK" ("ID_KATEGORI", "ID_KENDARAAN", "NAMA_KENDARAAN", "NOPOL", "TIPE_KENDARAAN", "HARGA", "STATUS", "FOTO_KENDARAAN", "CAP_PENUMPANG", "LAST_SERVICE", "TOP_SPEED", "BANYAK_SEWA") AS 
  SELECT
    KK.ID_KATEGORI,
    K.ID_KENDARAAN,
    K.NAMA_KENDARAAN,
    K.NOPOL,
    K.TIPE_KENDARAAN,
    K.HARGA,
    K.STATUS,
    K.FOTO_KENDARAAN,
    K.CAP_PENUMPANG,
    K.LAST_SERVICE,
    K.TOP_SPEED,
    K.BANYAK_SEWA
FROM
    RENTCAR.KENDARAAN K
INNER JOIN
    RENTCAR.KATALOG_KENDARAAN KK
ON
    K.KATALOG_KENDARAAN_ID_KATEGORI = KK.ID_KATEGORI
;CREATE OR REPLACE FORCE VIEW  "V_LIST_CAR_KATALOG" ("ID_KATEGORI", "NAMA_KATEGORI", "ID_KENDARAAN", "NAMA_KENDARAAN", "NOPOL", "TIPE_KENDARAAN", "HARGA", "STATUS", "BANYAK_SEWA", "TOP_SPEED", "LAST_SERVICE", "CAP_PENUMPANG") AS 
  SELECT 
    kk.ID_KATEGORI,
    kk.NAMA_KATEGORI,
    k.ID_KENDARAAN,
    k.NAMA_KENDARAAN,
    k.NOPOL,
    k.TIPE_KENDARAAN,
    k.HARGA,
    k.STATUS,
    k.BANYAK_SEWA,
    k.TOP_SPEED,
    k.LAST_SERVICE,
    k.CAP_PENUMPANG
FROM 
    RENTCAR.KATALOG_KENDARAAN kk
FULL JOIN 
    RENTCAR.KENDARAAN k ON kk.ID_KATEGORI = k.KATALOG_KENDARAAN_ID_KATEGORI
;CREATE OR REPLACE FORCE VIEW  "V_PELANGGAN_MEMBERSHIP" ("ID_PELANGGAN", "NAMA_PELANGGAN", "ALAMAT", "NOMOR_TELEPON", "EMAIL", "FOTO_PELANGGAN", "MEMBER_ID_PELANGGAN", "NIK", "PASSWORD", "STATUS", "POINT_MEMBERSHIP", "JENIS_MEMBERSHIP") AS 
  SELECT
    P.ID_PELANGGAN,
    P.NAMA_DEPAN ||' '|| P.NAMA_BELAKANG AS NAMA_PELANGGAN,
    P.ALAMAT,
    P.NOMOR_TELEPON,
    P.EMAIL,
    P.FOTO_PELANGGAN,
    P.MEMBER_ID_PELANGGAN,
    P.NIK,
    P.PASSWORD,
    P.STATUS,
    P.POINT_MEMBERSHIP,
    M.JENIS_MEMBERSHIP
FROM
     "PELANGGAN" P
LEFT JOIN
     "MEMBERSHIP" M
ON
    P.MEMBER_ID_PELANGGAN = M.ID_MEMBERSHIP
;CREATE OR REPLACE FORCE VIEW  "V_PESANAN" ("NAMA_LENGKAP", "NOMOR_TELEPON", "ID_USER", "ID_PESANAN", "TANGGAL_PEMESANAN", "STATUS_PEMESANAN", "TANGGAL_MULAI_SEWA", "TANGGAL_AKHIR_SEWA") AS 
  SELECT
    P.NAMA_DEPAN || ' ' || P.NAMA_BELAKANG AS NAMA_LENGKAP,
    P.NOMOR_TELEPON,
    P.ID_PELANGGAN AS ID_USER,
    PM.ID_PEMESANAN AS ID_PESANAN,
    PM.TANGGAL_PEMESANAN,
    PM.STATUS_PEMESANAN,
    PM.TANGGAL_MULAI_SEWA,
    PM.TANGGAL_AKHIR_SEWA
FROM PEMESANAN PM
JOIN PELANGGAN P ON PM.PELANGGAN_ID_PELANGGAN = P.ID_PELANGGAN
;
Rem No database link found to generate DDL.
Rem No type found to generate DDL.
Rem No materialized view found to generate DDL.